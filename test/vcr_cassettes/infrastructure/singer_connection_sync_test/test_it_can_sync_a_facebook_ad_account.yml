---
http_interactions:
- request:
    method: post
    uri: http://singer-importer-docker-compose.supo.dev:4002/import/facebook?import_id=1
    body:
      encoding: UTF-8
      string: '{"singer_config":{"access_token":"<FB_OAUTH_ACCESS_TOKEN>","account_id":"57930665","start_date":"2019-09-01"},"singer_state":{},"transform":{"account_id":16,"fb_account_id":"act_57930665"}}'
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - rest-client/2.1.0 (darwin18.2.0 x86_64) ruby/2.6.2p47
      Authorization:
      - "<AUTHORIZATION>"
      Content-Type:
      - application/json
      Content-Length:
      - '352'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 500
      message: INTERNAL SERVER ERROR
    headers:
      Content-Type:
      - text/html; charset=utf-8
      X-Xss-Protection:
      - '0'
      Connection:
      - close
      Server:
      - Werkzeug/0.15.6 Python/3.7.4
      Date:
      - Tue, 01 Oct 2019 13:49:49 GMT
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n
        \ \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n  <head>\n    <title>RuntimeError:
        Unknown importer facebook // Werkzeug Debugger</title>\n    <link rel=\"stylesheet\"
        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"\n        type=\"text/css\">\n
        \   <!-- We need to make sure this has a favicon so that the debugger does\n
        \        not by accident trigger a request to /favicon.ico which might\n         change
        the application state. -->\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n
        \   <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js\"></script>\n
        \   <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script>\n
        \   <script type=\"text/javascript\">\n      var TRACEBACK = 140426681873360,\n
        \         CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED
        = false,\n          SECRET = \"Saib1mO3wNJBbgSWeJ7q\";\n    </script>\n  </head>\n
        \ <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>RuntimeError</h1>\n<div
        class=\"detail\">\n  <p class=\"errormsg\">RuntimeError: Unknown importer
        facebook</p>\n</div>\n<h2 class=\"traceback\">Traceback <em>(most recent call
        last)</em></h2>\n<div class=\"traceback\">\n  \n  <ul><li><div class=\"frame\"
        id=\"frame-140426681874128\">\n  <h4>File <cite class=\"filename\">\"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\"</cite>,\n
        \     line <em class=\"line\">2463</em>,\n      in <code class=\"function\">__call__</code></h4>\n
        \ <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span>
        </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self,
        environ, start_response):</pre>\n<pre class=\"line before\"><span class=\"ws\">
        \       </span>&quot;&quot;&quot;The WSGI server calls the Flask application
        object as the</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>WSGI
        application. This calls :meth:`wsgi_app` which can be</pre>\n<pre class=\"line
        before\"><span class=\"ws\">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>\n<pre
        class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ,
        start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span>
        </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def __repr__(self):</pre>\n<pre
        class=\"line after\"><span class=\"ws\">        </span>return &quot;&lt;%s
        %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>\n</div>\n\n<li><div
        class=\"frame\" id=\"frame-140426681874192\">\n  <h4>File <cite class=\"filename\">\"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\"</cite>,\n
        \     line <em class=\"line\">2449</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n
        \ <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">
        \           </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">
        \               </span>ctx.push()</pre>\n<pre class=\"line before\"><span
        class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre
        class=\"line before\"><span class=\"ws\">            </span>except Exception
        as e:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>error
        = e</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response
        = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">
        \           </span>except:  # noqa: B001</pre>\n<pre class=\"line after\"><span
        class=\"ws\">                </span>error = sys.exc_info()[1]</pre>\n<pre
        class=\"line after\"><span class=\"ws\">                </span>raise</pre>\n<pre
        class=\"line after\"><span class=\"ws\">            </span>return response(environ,
        start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div>\n</div>\n\n<li><div
        class=\"frame\" id=\"frame-140426681874256\">\n  <h4>File <cite class=\"filename\">\"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\"</cite>,\n
        \     line <em class=\"line\">1866</em>,\n      in <code class=\"function\">handle_exception</code></h4>\n
        \ <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">
        \           </span># if we want to repropagate the exception, we can attempt
        to</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>#
        raise it with the whole traceback in case we can do that</pre>\n<pre class=\"line
        before\"><span class=\"ws\">            </span># (the function was actually
        called from the except part)</pre>\n<pre class=\"line before\"><span class=\"ws\">
        \           </span># otherwise, we just raise the error again</pre>\n<pre
        class=\"line before\"><span class=\"ws\">            </span>if exc_value is
        e:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>reraise(exc_type,
        exc_value, tb)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>else:</pre>\n<pre
        class=\"line after\"><span class=\"ws\">                </span>raise e</pre>\n<pre
        class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line
        after\"><span class=\"ws\">        </span>self.log_exception((exc_type, exc_value,
        tb))</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>server_error
        = InternalServerError()</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-140426681874320\">\n
        \ <h4>File <cite class=\"filename\">\"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/_compat.py\"</cite>,\n
        \     line <em class=\"line\">39</em>,\n      in <code class=\"function\">reraise</code></h4>\n
        \ <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">
        \   </span>import collections.abc as collections_abc</pre>\n<pre class=\"line
        before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span
        class=\"ws\">    </span>def reraise(tp, value, tb=None):</pre>\n<pre class=\"line
        before\"><span class=\"ws\">        </span>if value.__traceback__ is not tb:</pre>\n<pre
        class=\"line before\"><span class=\"ws\">            </span>raise value.with_traceback(tb)</pre>\n<pre
        class=\"line current\"><span class=\"ws\">        </span>raise value</pre>\n<pre
        class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line
        after\"><span class=\"ws\">    </span>implements_to_string = _identity</pre>\n<pre
        class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line
        after\"><span class=\"ws\"></span>else:</pre>\n<pre class=\"line after\"><span
        class=\"ws\">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>\n</div>\n\n<li><div
        class=\"frame\" id=\"frame-140426681873808\">\n  <h4>File <cite class=\"filename\">\"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\"</cite>,\n
        \     line <em class=\"line\">2446</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n
        \ <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">
        \       </span>ctx = self.request_context(environ)</pre>\n<pre class=\"line
        before\"><span class=\"ws\">        </span>error = None</pre>\n<pre class=\"line
        before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line before\"><span
        class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span
        class=\"ws\">                </span>ctx.push()</pre>\n<pre class=\"line current\"><span
        class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre
        class=\"line after\"><span class=\"ws\">            </span>except Exception
        as e:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error
        = e</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>response
        = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">
        \           </span>except:  # noqa: B001</pre>\n<pre class=\"line after\"><span
        class=\"ws\">                </span>error = sys.exc_info()[1]</pre></div>\n</div>\n\n<li><div
        class=\"frame\" id=\"frame-140426681874512\">\n  <h4>File <cite class=\"filename\">\"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\"</cite>,\n
        \     line <em class=\"line\">1951</em>,\n      in <code class=\"function\">full_dispatch_request</code></h4>\n
        \ <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">
        \           </span>request_started.send(self)</pre>\n<pre class=\"line before\"><span
        class=\"ws\">            </span>rv = self.preprocess_request()</pre>\n<pre
        class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre>\n<pre
        class=\"line before\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre>\n<pre
        class=\"line before\"><span class=\"ws\">        </span>except Exception as
        e:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>rv
        = self.handle_user_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">
        \       </span>return self.finalize_request(rv)</pre>\n<pre class=\"line after\"><span
        class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">
        \   </span>def finalize_request(self, rv, from_error_handler=False):</pre>\n<pre
        class=\"line after\"><span class=\"ws\">        </span>&quot;&quot;&quot;Given
        the return value from a view function this finalizes</pre>\n<pre class=\"line
        after\"><span class=\"ws\">        </span>the request by converting it into
        a response and invoking the</pre></div>\n</div>\n\n<li><div class=\"frame\"
        id=\"frame-140426681874576\">\n  <h4>File <cite class=\"filename\">\"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\"</cite>,\n
        \     line <em class=\"line\">1820</em>,\n      in <code class=\"function\">handle_user_exception</code></h4>\n
        \ <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">
        \           </span>return self.handle_http_exception(e)</pre>\n<pre class=\"line
        before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span
        class=\"ws\">        </span>handler = self._find_error_handler(e)</pre>\n<pre
        class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line
        before\"><span class=\"ws\">        </span>if handler is None:</pre>\n<pre
        class=\"line current\"><span class=\"ws\">            </span>reraise(exc_type,
        exc_value, tb)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return
        handler(e)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre
        class=\"line after\"><span class=\"ws\">    </span>def handle_exception(self,
        e):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>&quot;&quot;&quot;Handle
        an exception that did not have an error handler</pre>\n<pre class=\"line after\"><span
        class=\"ws\">        </span>associated with it, or that was raised from an
        error handler.</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-140426681874640\">\n
        \ <h4>File <cite class=\"filename\">\"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/_compat.py\"</cite>,\n
        \     line <em class=\"line\">39</em>,\n      in <code class=\"function\">reraise</code></h4>\n
        \ <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">
        \   </span>import collections.abc as collections_abc</pre>\n<pre class=\"line
        before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span
        class=\"ws\">    </span>def reraise(tp, value, tb=None):</pre>\n<pre class=\"line
        before\"><span class=\"ws\">        </span>if value.__traceback__ is not tb:</pre>\n<pre
        class=\"line before\"><span class=\"ws\">            </span>raise value.with_traceback(tb)</pre>\n<pre
        class=\"line current\"><span class=\"ws\">        </span>raise value</pre>\n<pre
        class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line
        after\"><span class=\"ws\">    </span>implements_to_string = _identity</pre>\n<pre
        class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line
        after\"><span class=\"ws\"></span>else:</pre>\n<pre class=\"line after\"><span
        class=\"ws\">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>\n</div>\n\n<li><div
        class=\"frame\" id=\"frame-140426681874384\">\n  <h4>File <cite class=\"filename\">\"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\"</cite>,\n
        \     line <em class=\"line\">1949</em>,\n      in <code class=\"function\">full_dispatch_request</code></h4>\n
        \ <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">
        \       </span>self.try_trigger_before_first_request_functions()</pre>\n<pre
        class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line
        before\"><span class=\"ws\">            </span>request_started.send(self)</pre>\n<pre
        class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre>\n<pre
        class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre>\n<pre
        class=\"line current\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre>\n<pre
        class=\"line after\"><span class=\"ws\">        </span>except Exception as
        e:</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>rv
        = self.handle_user_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">
        \       </span>return self.finalize_request(rv)</pre>\n<pre class=\"line after\"><span
        class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">
        \   </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>\n</div>\n\n<li><div
        class=\"frame\" id=\"frame-140426681874448\">\n  <h4>File <cite class=\"filename\">\"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\"</cite>,\n
        \     line <em class=\"line\">1935</em>,\n      in <code class=\"function\">dispatch_request</code></h4>\n
        \ <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">
        \           </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>\n<pre
        class=\"line before\"><span class=\"ws\">            </span>and req.method
        == &quot;OPTIONS&quot;</pre>\n<pre class=\"line before\"><span class=\"ws\">
        \       </span>):</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>return
        self.make_default_options_response()</pre>\n<pre class=\"line before\"><span
        class=\"ws\">        </span># otherwise dispatch to the handler for that endpoint</pre>\n<pre
        class=\"line current\"><span class=\"ws\">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>\n<pre
        class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line
        after\"><span class=\"ws\">    </span>def full_dispatch_request(self):</pre>\n<pre
        class=\"line after\"><span class=\"ws\">        </span>&quot;&quot;&quot;Dispatches
        the request and on top of that performs request</pre>\n<pre class=\"line after\"><span
        class=\"ws\">        </span>pre and postprocessing as well as HTTP exception
        catching and</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>error
        handling.</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-140426681874768\">\n
        \ <h4>File <cite class=\"filename\">\"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask_httpauth.py\"</cite>,\n
        \     line <em class=\"line\">105</em>,\n      in <code class=\"function\">decorated</code></h4>\n
        \ <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">
        \               </span>if not self.authenticate(auth, password):</pre>\n<pre
        class=\"line before\"><span class=\"ws\">                    </span># Clear
        TCP receive buffer of any pending data</pre>\n<pre class=\"line before\"><span
        class=\"ws\">                    </span>request.data</pre>\n<pre class=\"line
        before\"><span class=\"ws\">                    </span>return self.auth_error_callback()</pre>\n<pre
        class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line
        current\"><span class=\"ws\">            </span>return f(*args, **kwargs)</pre>\n<pre
        class=\"line after\"><span class=\"ws\">        </span>return decorated</pre>\n<pre
        class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line
        after\"><span class=\"ws\">    </span>def username(self):</pre>\n<pre class=\"line
        after\"><span class=\"ws\">        </span>if not request.authorization:</pre>\n<pre
        class=\"line after\"><span class=\"ws\">            </span>return &quot;&quot;</pre></div>\n</div>\n\n<li><div
        class=\"frame\" id=\"frame-140426681873872\">\n  <h4>File <cite class=\"filename\">\"/app/src/app.py\"</cite>,\n
        \     line <em class=\"line\">107</em>,\n      in <code class=\"function\">run_import</code></h4>\n
        \ <div class=\"source \"><pre class=\"line before\"><span class=\"ws\"></span>@app.route(&quot;/import/&lt;importer&gt;&quot;,
        methods=[&quot;POST&quot;])</pre>\n<pre class=\"line before\"><span class=\"ws\"></span>@auth.login_required</pre>\n<pre
        class=\"line before\"><span class=\"ws\"></span>def run_import(importer):</pre>\n<pre
        class=\"line before\"><span class=\"ws\">    </span>config = config_from_request()</pre>\n<pre
        class=\"line before\"><span class=\"ws\">    </span>state = state_from_request()</pre>\n<pre
        class=\"line current\"><span class=\"ws\">    </span>tap = tap_for_param(importer)</pre>\n<pre
        class=\"line after\"><span class=\"ws\">    </span>transform_fields = transform_fields_from_request()</pre>\n<pre
        class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line
        after\"><span class=\"ws\">    </span>return Response(format_response_stream_lines(execute_import(config,
        state, tap, transform_fields)), mimetype=&quot;text/singer-text&quot;)</pre></div>\n</div>\n\n<li><div
        class=\"frame\" id=\"frame-140426681873616\">\n  <h4>File <cite class=\"filename\">\"/app/src/app.py\"</cite>,\n
        \     line <em class=\"line\">32</em>,\n      in <code class=\"function\">tap_for_param</code></h4>\n
        \ <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">    </span>elif
        param == &quot;kafka&quot;:</pre>\n<pre class=\"line before\"><span class=\"ws\">
        \       </span>return &quot;tap-kafka&quot;</pre>\n<pre class=\"line before\"><span
        class=\"ws\">    </span>elif param == &quot;test-csv&quot;:</pre>\n<pre class=\"line
        before\"><span class=\"ws\">        </span>return &quot;tap-csv&quot;</pre>\n<pre
        class=\"line before\"><span class=\"ws\">    </span>else:</pre>\n<pre class=\"line
        current\"><span class=\"ws\">        </span>raise RuntimeError(f&quot;Unknown
        importer {param}&quot;)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span>
        </pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre
        class=\"line after\"><span class=\"ws\"></span>def config_from_request():</pre>\n<pre
        class=\"line after\"><span class=\"ws\">    </span>return request.json[&quot;singer_config&quot;]</pre>\n<pre
        class=\"line after\"><span class=\"ws\"></span> </pre></div>\n</div>\n</ul>\n
        \ <blockquote>RuntimeError: Unknown importer facebook</blockquote>\n</div>\n\n<div
        class=\"plain\">\n  <form action=\"/?__debugger__=yes&amp;cmd=paste\" method=\"post\">\n
        \   <p>\n      <input type=\"hidden\" name=\"language\" value=\"pytb\">\n
        \     This is the Copy/Paste friendly version of the traceback.  <span\n      class=\"pastemessage\">You
        can also paste this traceback into\n      a <a href=\"https://gist.github.com/\">gist</a>:\n
        \     <input type=\"submit\" value=\"create paste\"></span>\n    </p>\n    <textarea
        cols=\"50\" rows=\"10\" name=\"code\" readonly>Traceback (most recent call
        last):\n  File &quot;/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py&quot;,
        line 2463, in __call__\n    return self.wsgi_app(environ, start_response)\n
        \ File &quot;/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py&quot;,
        line 2449, in wsgi_app\n    response = self.handle_exception(e)\n  File &quot;/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py&quot;,
        line 1866, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File
        &quot;/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/_compat.py&quot;,
        line 39, in reraise\n    raise value\n  File &quot;/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py&quot;,
        line 2446, in wsgi_app\n    response = self.full_dispatch_request()\n  File
        &quot;/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py&quot;,
        line 1951, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n
        \ File &quot;/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py&quot;,
        line 1820, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n
        \ File &quot;/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/_compat.py&quot;,
        line 39, in reraise\n    raise value\n  File &quot;/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py&quot;,
        line 1949, in full_dispatch_request\n    rv = self.dispatch_request()\n  File
        &quot;/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py&quot;,
        line 1935, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n
        \ File &quot;/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask_httpauth.py&quot;,
        line 105, in decorated\n    return f(*args, **kwargs)\n  File &quot;/app/src/app.py&quot;,
        line 107, in run_import\n    tap = tap_for_param(importer)\n  File &quot;/app/src/app.py&quot;,
        line 32, in tap_for_param\n    raise RuntimeError(f&quot;Unknown importer
        {param}&quot;)\nRuntimeError: Unknown importer facebook</textarea>\n  </form>\n</div>\n<div
        class=\"explanation\">\n  The debugger caught an exception in your WSGI application.
        \ You can now\n  look at the traceback which led to the error.  <span class=\"nojavascript\">\n
        \ If you enable JavaScript you can also use additional features such as code\n
        \ execution (if the evalex feature is enabled), automatic pasting of the\n
        \ exceptions and much more.</span>\n</div>\n      <div class=\"footer\">\n
        \       Brought to you by <strong class=\"arthur\">DON'T PANIC</strong>, your\n
        \       friendly Werkzeug powered traceback interpreter.\n      </div>\n    </div>\n\n
        \   <div class=\"pin-prompt\">\n      <div class=\"inner\">\n        <h3>Console
        Locked</h3>\n        <p>\n          The console is locked and needs to be
        unlocked by entering the PIN.\n          You can find the PIN printed out
        on the standard output of your\n          shell that runs the server.\n        <form>\n
        \         <p>PIN:\n            <input type=text name=pin size=14>\n            <input
        type=submit name=btn value=\"Confirm Pin\">\n        </form>\n      </div>\n
        \   </div>\n  </body>\n</html>\n\n<!--\n\nTraceback (most recent call last):\n
        \ File \"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\",
        line 2463, in __call__\n    return self.wsgi_app(environ, start_response)\n
        \ File \"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\",
        line 2449, in wsgi_app\n    response = self.handle_exception(e)\n  File \"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\",
        line 1866, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File
        \"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/_compat.py\",
        line 39, in reraise\n    raise value\n  File \"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\",
        line 2446, in wsgi_app\n    response = self.full_dispatch_request()\n  File
        \"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\",
        line 1951, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n
        \ File \"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\",
        line 1820, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n
        \ File \"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/_compat.py\",
        line 39, in reraise\n    raise value\n  File \"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\",
        line 1949, in full_dispatch_request\n    rv = self.dispatch_request()\n  File
        \"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask/app.py\",
        line 1935, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n
        \ File \"/root/.local/share/virtualenvs/app-4PlAip0Q/lib/python3.7/site-packages/flask_httpauth.py\",
        line 105, in decorated\n    return f(*args, **kwargs)\n  File \"/app/src/app.py\",
        line 107, in run_import\n    tap = tap_for_param(importer)\n  File \"/app/src/app.py\",
        line 32, in tap_for_param\n    raise RuntimeError(f\"Unknown importer {param}\")\nRuntimeError:
        Unknown importer facebook\n\n-->\n"
    http_version: 
  recorded_at: Tue, 01 Oct 2019 13:49:49 GMT
recorded_with: VCR 5.0.0
